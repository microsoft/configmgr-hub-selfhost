<?xml version="1.0" encoding="utf-16"?>
<DesiredConfigurationDigest xmlns="http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration">
  <!--Authored against the following schema version: 5-->
  <OperatingSystem AuthoringScopeId="ScopeId_0D7D8B60-F2F9-484A-B9F3-4A8B68D14D59" LogicalName="LogicalName_58ca1d0c-7446-45d0-8934-b0c0ca9de770" Version="7">
    <Annotation xmlns="http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules">
      <DisplayName Text="CVE-2017-5754 - Rogue data cache load" ResourceId="ID-61c674d1-49c3-4f15-b671-ee271cf1c01c" />
      <Description Text="Systems with microprocessors utilizing speculative execution and indirect branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis of the data cache." ResourceId="ID-88b9c800-7917-4e13-a47c-5415704724b2" />
    </Annotation>
    <Parts>
      <SuppressionReferences />
    </Parts>
    <Settings>
      <RootComplexSetting>
        <SimpleSetting LogicalName="ScriptSetting_10b199ce-7ed8-4d67-955c-8a29ab5765ec" DataType="String">
          <Annotation xmlns="http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules">
            <DisplayName Text="Check whether Windows OS support for kernel VA shadow is enabled" ResourceId="ID-0b193a7e-ad9a-49d3-9f58-cde59ae7eead" />
            <Description Text="" />
          </Annotation>
          <ScriptDiscoverySource Is64Bit="true">
            <DiscoveryScriptBody ScriptType="PowerShell">$NtQSIDefinition = @'
    [DllImport("ntdll.dll")]
    public static extern int NtQuerySystemInformation(uint systemInformationClass, IntPtr systemInformation, uint systemInformationLength, IntPtr returnLength);
'@
    
    $ntdll = Add-Type -MemberDefinition $NtQSIDefinition -Name 'ntdll' -Namespace 'Win32' -PassThru


    [System.IntPtr]$systemInformationPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(4)
    [System.IntPtr]$returnLengthPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(4)

    $object = New-Object -TypeName PSObject

    try {

        #
        # Query kernel VA shadow information.
        #

        # Write-Host
        # Write-Host "Speculation control settings for CVE-2017-5754 [rogue data cache load]" -ForegroundColor Cyan
        # Write-Host

        $kvaShadowRequired = $true
        $kvaShadowPresent = $false
        $kvaShadowEnabled = $false
        $kvaShadowPcidEnabled = $false

        $cpu = Get-WmiObject Win32_Processor

        if ($cpu.Manufacturer -eq "AuthenticAMD") {
            $kvaShadowRequired = $false
        }
        elseif ($cpu.Manufacturer -eq "GenuineIntel") {
            $regex = [regex]'Family (\d+) Model (\d+) Stepping (\d+)'
            $result = $regex.Match($cpu.Description)
            
            if ($result.Success) {
                $family = [System.UInt32]$result.Groups[1].Value
                $model = [System.UInt32]$result.Groups[2].Value
                $stepping = [System.UInt32]$result.Groups[3].Value
                
                if (($family -eq 0x6) -and 
                    (($model -eq 0x1c) -or
                     ($model -eq 0x26) -or
                     ($model -eq 0x27) -or
                     ($model -eq 0x36) -or
                     ($model -eq 0x35))) {

                    $kvaShadowRequired = $false
                }
            }
        }
        else {
            throw ("Unsupported processor manufacturer: {0}" -f $cpu.Manufacturer)
        }

        [System.UInt32]$systemInformationClass = 196
        [System.UInt32]$systemInformationLength = 4

        $retval = $ntdll::NtQuerySystemInformation($systemInformationClass, $systemInformationPtr, $systemInformationLength, $returnLengthPtr)

        if ($retval -eq 0xc0000003 -or $retval -eq 0xc0000002) {
        }
        elseif ($retval -ne 0) {
            throw (("Querying kernel VA shadow information failed with error {0:X8}" -f $retval))
        }
        else {
    
            [System.UInt32]$kvaShadowEnabledFlag = 0x01
            [System.UInt32]$kvaShadowUserGlobalFlag = 0x02
            [System.UInt32]$kvaShadowPcidFlag = 0x04
            [System.UInt32]$kvaShadowInvpcidFlag = 0x08

            [System.UInt32]$flags = [System.UInt32][System.Runtime.InteropServices.Marshal]::ReadInt32($systemInformationPtr)

            $kvaShadowPresent = $true
            $kvaShadowEnabled = (($flags -band $kvaShadowEnabledFlag) -ne 0)
            $kvaShadowPcidEnabled = ((($flags -band $kvaShadowPcidFlag) -ne 0) -and (($flags -band $kvaShadowInvpcidFlag) -ne 0))

            # if ($PSBoundParameters['Verbose']) {
            #     Write-Host "KvaShadowEnabled             :" (($flags -band $kvaShadowEnabledFlag) -ne 0)
            #     Write-Host "KvaShadowUserGlobal          :" (($flags -band $kvaShadowUserGlobalFlag) -ne 0)
            #     Write-Host "KvaShadowPcid                :" (($flags -band $kvaShadowPcidFlag) -ne 0)
            #     Write-Host "KvaShadowInvpcid             :" (($flags -band $kvaShadowInvpcidFlag) -ne 0)
            # }
        }
        
        # Write-Host "Hardware requires kernel VA shadowing:"$kvaShadowRequired

        if ($kvaShadowRequired) {
            # Write-Host "Windows OS support for kernel VA shadow is present:"$kvaShadowPresent -ForegroundColor $(If ($kvaShadowPresent) { [System.ConsoleColor]::Green } Else { [System.ConsoleColor]::Red })
            # "Windows OS support for kernel VA shadow is enabled:"
            Write-Host $kvaShadowEnabled -ForegroundColor $(If ($kvaShadowEnabled) { [System.ConsoleColor]::Green } Else { [System.ConsoleColor]::Red })

            # if ($kvaShadowEnabled) {
            #     Write-Host "Windows OS support for PCID performance optimization is enabled: $kvaShadowPcidEnabled [not required for security]" -ForegroundColor $(If ($kvaShadowPcidEnabled) { [System.ConsoleColor]::Green } Else { [System.ConsoleColor]::Blue })
            # }
        }
        else {
            Write-Host $true
        }

    }
    finally
    {
        if ($systemInformationPtr -ne [System.IntPtr]::Zero) {
            [System.Runtime.InteropServices.Marshal]::FreeHGlobal($systemInformationPtr)
        }
 
        if ($returnLengthPtr -ne [System.IntPtr]::Zero) {
            [System.Runtime.InteropServices.Marshal]::FreeHGlobal($returnLengthPtr)
        }
    }</DiscoveryScriptBody>
          </ScriptDiscoverySource>
        </SimpleSetting>
      </RootComplexSetting>
    </Settings>
    <Rules>
      <Rule xmlns="http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules" id="Rule_461234b9-177a-4b04-bc79-e55b00bba316" Severity="Critical" NonCompliantWhenSettingIsNotFound="false">
        <Annotation>
          <DisplayName Text="Windows OS support for kernel VA shadow is enabled" ResourceId="ID-5e04f1d1-ec46-4ae7-8611-c14308dedff4" />
          <Description Text="" />
        </Annotation>
        <Expression>
          <Operator>Equals</Operator>
          <Operands>
            <SettingReference AuthoringScopeId="ScopeId_0D7D8B60-F2F9-484A-B9F3-4A8B68D14D59" LogicalName="LogicalName_58ca1d0c-7446-45d0-8934-b0c0ca9de770" Version="7" DataType="String" SettingLogicalName="ScriptSetting_10b199ce-7ed8-4d67-955c-8a29ab5765ec" SettingSourceType="Script" Method="Value" Changeable="false" />
            <ConstantValue Value="True" DataType="String" />
          </Operands>
        </Expression>
      </Rule>
    </Rules>
    <OperatingSystemDiscoveryRule xmlns="http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules">
      <OperatingSystemExpression>
        <Operator>OneOf</Operator>
        <Operands>
          <RuleExpression RuleId="Windows/All_x64_Windows_Vista" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Vista" />
          <RuleExpression RuleId="Windows/x64_Windows_Vista_SP2" />
          <RuleExpression RuleId="Windows/x86_Windows_Vista_SP2" />
          <RuleExpression RuleId="Windows/All_x64_Windows_7_Client" />
          <RuleExpression RuleId="Windows/All_x86_Windows_7_Client" />
          <RuleExpression RuleId="Windows/x64_Windows_7_Client" />
          <RuleExpression RuleId="Windows/x64_Windows_7_SP1" />
          <RuleExpression RuleId="Windows/x86_Windows_7_Client" />
          <RuleExpression RuleId="Windows/x86_Windows_7_SP1" />
          <RuleExpression RuleId="Windows/All_x64_Windows_8_Client" />
          <RuleExpression RuleId="Windows/All_x86_Windows_8_Client" />
          <RuleExpression RuleId="Windows/All_x64_Windows_8.1_Client" />
          <RuleExpression RuleId="Windows/All_x86_Windows_8.1_Client" />
          <RuleExpression RuleId="Windows/All_x64_Windows_10_and_higher_Clients" />
          <RuleExpression RuleId="Windows/All_x86_Windows_10_and_higher_Clients" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2003_Non_R2" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2003_R2" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Server_2003_Non_R2" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Server_2003_R2" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2003_R2_SP2" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2003_SP2" />
          <RuleExpression RuleId="Windows/x86_Windows_Server_2003_R2_SP2" />
          <RuleExpression RuleId="Windows/x86_Windows_Server_2003_SP2" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2008" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2008_R2" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Server_2008" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_R2" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_R2_CORE" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_R2_SP1" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_R2_SP1_Core" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_SP2" />
          <RuleExpression RuleId="Windows/x64_Windows_Server_2008_SP2_Core" />
          <RuleExpression RuleId="Windows/x86_Windows_Server_2008_SP2" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_8" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2012_R2" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Server_2016" />
          <RuleExpression RuleId="Windows/All_Embedded_Windows_XP" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Embedded_8.1_Industry" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Embedded_8_Industry" />
          <RuleExpression RuleId="Windows/All_x64_Windows_Embedded_8_Standard" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Embedded_8.1_Industry" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Embedded_8_Industry" />
          <RuleExpression RuleId="Windows/All_x86_Windows_Embedded_8_Standard" />
          <RuleExpression RuleId="Windows/x64_Embedded_Windows_7" />
          <RuleExpression RuleId="Windows/x86_Embedded_Windows_7" />
        </Operands>
      </OperatingSystemExpression>
    </OperatingSystemDiscoveryRule>
  </OperatingSystem>
</DesiredConfigurationDigest>